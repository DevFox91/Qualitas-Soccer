package com.example.appqs.actions;

import com.example.appqs.webConstructors.hideRegistro;


import com.vaadin.ui.*;


public class gridRelacionFamiliar extends VerticalLayout {

    public gridRelacionFamiliar() {
        // Crea un Grid
        Grid<Object[]> grid = new Grid<>();

        // Tama√±o del grid
        grid.setSizeFull();

        // Agregar una columna de acciones
        grid.addComponentColumn(row -> {
            HorizontalLayout layout = new HorizontalLayout();

            // Bot√≥n para editar (teclado)
            Button editButton = new Button("‚å®");
            editButton.addClickListener(event -> {
            });

            layout.addComponent(editButton);

            // Bot√≥n para eliminar (borrar)
            Button deleteButton = new Button("‚å´");
            deleteButton.setData(row); // Guardar los datos de la fila asociada al bot√≥n
            hideRegistro.attachHideListener(deleteButton, grid);
            layout.addComponent(deleteButton);

            // Bot√≥n para ver relaciones familiares
            Button familyButton = new Button("üë®‚Äçüë©‚Äçüëß‚Äçüë¶");
            familyButton.addClickListener(event -> {
                // L√≥gica para ver relaciones familiares
            });
            layout.addComponent(familyButton);

            return layout;
        }).setCaption("Acciones");

        // Agregar columnas al Grid con los nombres de las columnas de la db

        grid.addColumn(row -> row[0]).setCaption("Alumno");
        grid.addColumn(row -> row[1]).setCaption("Tutor");
        grid.addColumn(row -> row[2]).setCaption("Entrenador");

        // Agregar el Grid al dise√±o vertical
        addComponent(grid);

        // Ajustar el tama√±o del Grid al espacio disponible
        setExpandRatio(grid, 1);
    }
}
